#!/bin/bash
set -x
source /usr/bin/logger.sh
log.notice "starting entrypoint.sh"

source /usr/bin/graceful-stop.sh

# Set up signal handler
trap 'graceful_stop' TERM

log.notice "Configuring environment for GitHub Actions Runner"

# Certificate setup
if [ -d "$RUNNER_HOME/trusted-certs" ]; then
    log.notice "Installing additional trusted certificates"
    cp -f $RUNNER_HOME/trusted-certs/* /etc/pki/ca-trust/source/anchors/
    update-ca-trust extract
fi

# Create user entry if missing
if [ -e /etc/arc/hooks/create-passwd ]; then
    log.notice "Creating user entry"
    /etc/arc/hooks/create-passwd
fi

# Configure Podman storage - VFS driver doesn't require migrate
log.notice "Setting up Podman storage with VFS driver"
export CONTAINERS_CONF=/etc/containers/containers.conf
export STORAGE_DRIVER=vfs

# Verify storage configuration
log.notice "Podman storage configuration:"
podman info --format=json | jq .store

log.notice "Starting GitHub Actions Runner"

# Start the runner in background
/usr/bin/startup.sh &
RUNNER_PID=$!

# Wait for runner to exit
wait $RUNNER_PID
RUNNER_EXIT_CODE=$?

log.notice "Runner process exited with code ${RUNNER_EXIT_CODE}"

# Clean up .runner file if exists
if [ -f "${HOME}/.runner" ]; then
  log.notice "Removing .runner file"
  rm -f "${HOME}/.runner"
fi

log.notice "Exiting container"
exit $RUNNER_EXIT_CODE

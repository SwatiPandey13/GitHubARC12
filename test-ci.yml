name: Build and Package - Maven testing

on:
  push:
    branches: 
      - Test_Volo
  pull_request:
    branches: [ main ]
  workflow_dispatch: 
jobs:
  build:
    runs-on: github-arc-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          server-id: ''
          # cache: maven

      - name: Deploy custom settings.xml
        run: |
          mkdir -p ~/.m2
          cp .github/maven/settings.xml ~/.m2/
          ls -la ~/.m2/
      - name: Install Maven 3.8.8 (No Admin)
        run: |
          curl -L -o apache-maven-3.8.8-bin.tar.gz https://archive.apache.org/dist/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz
          mkdir -p ~/maven
          tar -xzf apache-maven-3.8.8-bin.tar.gz -C ~/maven
          echo "$HOME/maven/apache-maven-3.8.8/bin" >> $GITHUB_PATH
          $HOME/maven/apache-maven-3.8.8/bin/mvn --version
      - name: Write Artifactory CA cert from secret
        run: |
          echo "${{ secrets.ARTIFACTORY_CA_CRT }}" > artifactory-ca.crt
      - name: Create new Java truststore and import Artifactory CA cert
        run: |
          # Create a new empty Java truststore
          keytool -genkey -alias temp -keystore ./custom-cacerts -storepass changeit -keyalg RSA -dname "CN=temp" -validity 1
          keytool -delete -alias temp -keystore ./custom-cacerts -storepass changeit
          # Import the Artifactory CA certificate
          keytool -importcert -noprompt \
            -alias artifactory-ca \
            -file artifactory-ca.crt \
            -keystore ./custom-cacerts \
            -storepass changeit
          # Point all Java processes to use the new truststore
          echo "JAVA_TOOL_OPTIONS=-Djavax.net.ssl.trustStore=$(pwd)/custom-cacerts -Djavax.net.ssl.trustStorePassword=changeit" >> $GITHUB_ENV
      - name: Build with Maven
        run: mvn clean package -DskipTests -Dartifactory.resolve.contextUrl=https://artifactory.voya.net/artifactory -Dartifactory.resolve.username=s120232 -Dartifactory.resolve.password=Test123!

      - name: Set up JDK 11 for SonarQube
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: SonarQube Scan
        run: |
          # Use the same Maven installation but with Java 11
          export JAVA_HOME=$RUNNER_TEMP/Java_Temurin-Hotspot_jdk/11.0.22-7/x64
          $HOME/maven/apache-maven-3.8.8/bin/mvn sonar:sonar \
            -Dsonar.projectKey=Volo \
            -Dsonar.projectName=Volo \
            -Dsonar.host.url=https://sonarqube.voya.net/ \
            -Dsonar.login=sqa_8f629bcea9ef8f37f5a0efd32a37dda93d731wwad16

 ================

 Run # Use the same Maven installation but with Java 11
  # Use the same Maven installation but with Java 11
  export JAVA_HOME=$RUNNER_TEMP/Java_Temurin-Hotspot_jdk/11.0.22-7/x64
  $HOME/maven/apache-maven-3.8.8/bin/mvn sonar:sonar \
    -Dsonar.projectKey=Volo \
    -Dsonar.projectName=Volo \
    -Dsonar.host.url=https://sonarqube.voya.net/ \
    -Dsonar.login=sqa_8f629bcea9ef8f37f5a0efd32a37dda93d731d16
  shell: /usr/bin/bash -e {0}
  env:
    JAVA_HOME: /home/runner/_work/_tool/Java_Temurin-Hotspot_jdk/11.0.27-6/x64
    JAVA_HOME_8_X64: /home/runner/_work/_tool/Java_Temurin-Hotspot_jdk/8.0.452-9/x64
    JAVA_TOOL_OPTIONS: -Djavax.net.ssl.trustStore=/home/runner/_work/arc-test-cloud/arc-test-cloud/custom-cacerts -Djavax.net.ssl.trustStorePassword=changeit
    JAVA_HOME_11_X64: /home/runner/_work/_tool/Java_Temurin-Hotspot_jdk/11.0.27-6/x64
The JAVA_HOME environment variable is not defined correctly,
this environment variable is needed to run this program.

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.generate.project.parent</groupId>
    <artifactId>volo</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <name>volo</name>
    <url>http://maven.apache.org</url>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <final.name>ivolo</final.name>
        <final.version>1.0.0</final.version>
        <target.dir>${project.basedir}/target/${project.artifactId}</target.dir>
        
        <!-- Java 17 Properties -->
        <maven.compiler.release>17</maven.compiler.release>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        
        <!-- Plugin Versions -->
        <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
        <sonar-maven-plugin.version>3.11.0.3922</sonar-maven-plugin.version>
        <maven.enforcer.plugin.version>3.4.1</maven.enforcer.plugin.version>
        
        <!-- Dependency Versions -->
        <jakarta.servlet.version>5.0.0</jakarta.servlet.version>
        <commons-lang.version>2.6</commons-lang.version>
        <struts2.version>2.5.33</struts2.version>
        <mssql-jdbc.version>12.4.1.jre11</mssql-jdbc.version>
        
        <!-- Sonar Properties -->
        <sonar.skipSurefireTests>true</sonar.skipSurefireTests>
        <sonar.test.exclusions>**/*</sonar.test.exclusions>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Handle tools.jar dependency -->
            <dependency>
                <groupId>sun.jdk</groupId>
                <artifactId>tools</artifactId>
                <version>1.8</version>
                <scope>system</scope>
                <systemPath>${java.home}/../lib/tools.jar</systemPath>
                <optional>true</optional>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>voloJAR</module>
        <module>voloWAR</module>
    </modules>

    <dependencies>
        <!-- Your existing dependencies -->
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1</version>
        </dependency>
        
        <!-- Add missing dependencies -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>${jakarta.servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>${mssql-jdbc.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-core</artifactId>
            <version>${struts2.version}</version>
        </dependency>
        
        <!-- Add your internal cs-projects dependencies here -->
        <dependency>
            <groupId>cs-projects</groupId>
            <artifactId>cs-business</artifactId>
            <version>44.0-SNAPSHOT</version>
        </dependency>
        <!-- Add other cs-projects dependencies as needed -->
        
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Compiler Plugin with stricter checks -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <release>${maven.compiler.release}</release>
                        <compilerArgs>
                            <arg>-Xlint:all</arg>
                            <arg>-Werror</arg>
                            <arg>--add-modules=java.se,jdk.unsupported</arg>
                        </compilerArgs>
                        <parameters>true</parameters>
                        <fork>true</fork>
                        <verbose>true</verbose>
                    </configuration>
                </plugin>
                
                <!-- Enforcer Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[17,18)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>java17</id>
            <activation>
                <jdk>17</jdk>
            </activation>
            <properties>
                <maven.compiler.includeSystemScope>false</maven.compiler.includeSystemScope>
            </properties>
        </profile>
    </profiles>
</project>

=========================================


name: Sonar test

on:
  push:
    branches: 
      - test_sonar
  workflow_dispatch: 

jobs:
  build:
    runs-on: github-arc-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Configure Maven
        run: |
          mkdir -p ~/.m2
          cp .github/maven/settings.xml ~/.m2/

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Install Maven
        run: |
          curl -L -o apache-maven-3.8.8-bin.tar.gz https://archive.apache.org/dist/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz
          mkdir -p ~/maven
          tar -xzf apache-maven-3.8.8-bin.tar.gz -C ~/maven
          echo "$HOME/maven/apache-maven-3.8.8/bin" >> $GITHUB_PATH

      - name: Configure SSL
        run: |
          echo "${{ secrets.ARTIFACTORY_CA_CRT }}" > artifactory-ca.crt
          keytool -importcert -noprompt \
            -alias artifactory-ca \
            -file artifactory-ca.crt \
            -keystore $JAVA_HOME/lib/security/cacerts \
            -storepass changeit
          echo "JAVA_TOOL_OPTIONS=-Djavax.net.ssl.trustStore=$JAVA_HOME/lib/security/cacerts" >> $GITHUB_ENV
      
      - name: Build with Maven
        env:
          MAVEN_OPTS: "--add-modules=java.se,jdk.unsupported"
        run: |
          mvn -B clean package -DskipTests \
            -Dartifactory.resolve.contextUrl=https://artifactory.voya.net/artifactory \
            -Dartifactory.resolve.username=${{ secrets.ARTIFACTORY_USERNAME }} \
            -Dartifactory.resolve.password=${{ secrets.ARTIFACTORY_PASSWORD }} \
            -Pjava17 \
            -Dmaven.compiler.fork=true
            
      - name: Run SonarQube analysis
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
            -Dsonar.projectKey=Volo \
            -Dsonar.projectName=Volo \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -s .github/maven/settings.xml

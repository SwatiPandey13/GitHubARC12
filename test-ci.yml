name: Maven Build with SonarQube

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  MAVEN_OPTS: -Djava.awt.headless=true
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

jobs:
  build:
    runs-on: openshift-rhel-runner  # Replace with your actual runner label
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Required for SonarQube analysis
        
    # Setup JDK 8 for building the project (since your pom.xml specifies Java 8)
    - name: Set up JDK 8 for build
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-
        
    # First build with tests skipped (faster)
    - name: Build with Maven
      run: mvn -B clean package -DskipTests -Dartifactory.resolve.username=$ARTIFACTORY_USERNAME -Dartifactory.resolve.password=$ARTIFACTORY_PASSWORD
      
    # Setup JDK 11 for SonarQube analysis
    - name: Set up JDK 11 for SonarQube
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    # Run SonarQube analysis with proper Java version
    - name: Run SonarQube analysis
      run: |
        mvn -B verify sonar:sonar \
          -Dsonar.projectKey=volo \
          -Dsonar.projectName=volo \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.java.jdkHome=$JAVA_HOME_11_X64 \  # Explicitly point to JDK 11
          -Dartifactory.resolve.username=$ARTIFACTORY_USERNAME \
          -Dartifactory.resolve.password=$ARTIFACTORY_PASSWORD
          
    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          **/target/*.war
          **/target/*.jar

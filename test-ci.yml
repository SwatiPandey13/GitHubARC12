# Use the base image from your artifactory
FROM artifactory.voya.net/docker-virtual/openshift/actions/action-runner:latest

# Set maintainer label
LABEL maintainer="your.name@voya.com"

# Install necessary packages
USER root

# Install required system packages
RUN yum install -y \
    wget \
    tar \
    gzip \
    which \
    && yum clean all \
    && rm -rf /var/cache/yum

# Create directories for JDKs
RUN mkdir -p /opt/jdks

# Install JDK 8
RUN wget https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u392-b08/OpenJDK8U-jdk_x64_linux_hotspot_8u392b08.tar.gz -O /tmp/jdk8.tar.gz \
    && tar -xzf /tmp/jdk8.tar.gz -C /opt/jdks \
    && mv /opt/jdks/jdk8u392-b08 /opt/jdks/jdk8 \
    && rm /tmp/jdk8.tar.gz

# Install JDK 11
RUN wget https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.21+9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.21_9.tar.gz -O /tmp/jdk11.tar.gz \
    && tar -xzf /tmp/jdk11.tar.gz -C /opt/jdks \
    && mv /opt/jdks/jdk-11.0.21+9 /opt/jdks/jdk11 \
    && rm /tmp/jdk11.tar.gz

# Install JDK 17
RUN wget https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.9+9/OpenJDK17U-jdk_x64_linux_hotspot_17.0.9_9.tar.gz -O /tmp/jdk17.tar.gz \
    && tar -xzf /tmp/jdk17.tar.gz -C /opt/jdks \
    && mv /opt/jdks/jdk-17.0.9+9 /opt/jdks/jdk17 \
    && rm /tmp/jdk17.tar.gz

# Install Maven 3.9.5 (default)
ARG MAVEN_VERSION=3.9.5
RUN wget https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz -O /tmp/maven.tar.gz \
    && mkdir -p /opt/maven \
    && tar -xzf /tmp/maven.tar.gz -C /opt/maven \
    && mv /opt/maven/apache-maven-${MAVEN_VERSION} /opt/maven/maven-${MAVEN_VERSION} \
    && rm /tmp/maven.tar.gz

# Install Maven 3.8.8
ARG MAVEN_VERSION_388=3.8.8
RUN wget https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION_388}/binaries/apache-maven-${MAVEN_VERSION_388}-bin.tar.gz -O /tmp/maven-388.tar.gz \
    && mkdir -p /opt/maven \
    && tar -xzf /tmp/maven-388.tar.gz -C /opt/maven \
    && mv /opt/maven/apache-maven-${MAVEN_VERSION_388} /opt/maven/maven-${MAVEN_VERSION_388} \
    && rm /tmp/maven-388.tar.gz

# Set environment variables
ENV JAVA_HOME=/opt/jdks/jdk17
ENV M2_HOME=/opt/maven/maven-${MAVEN_VERSION}
ENV MAVEN_HOME=/opt/maven/maven-${MAVEN_VERSION}
ENV PATH="${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${PATH}"

# Create symlinks for Maven versions
RUN ln -s /opt/maven/maven-${MAVEN_VERSION}/bin/mvn /usr/bin/mvn \
    && ln -s /opt/maven/maven-${MAVEN_VERSION_388}/bin/mvn /usr/bin/mvn-3.8.8

# Add alternatives for JDKs
RUN alternatives --install /usr/bin/java java /opt/jdks/jdk8/bin/java 1 \
    && alternatives --install /usr/bin/java java /opt/jdks/jdk11/bin/java 2 \
    && alternatives --install /usr/bin/java java /opt/jdks/jdk17/bin/java 3 \
    && alternatives --install /usr/bin/javac javac /opt/jdks/jdk8/bin/javac 1 \
    && alternatives --install /usr/bin/javac javac /opt/jdks/jdk11/bin/javac 2 \
    && alternatives --install /usr/bin/javac javac /opt/jdks/jdk17/bin/javac 3

# Set default JDK to 17
RUN alternatives --set java /opt/jdks/jdk17/bin/java \
    && alternatives --set javac /opt/jdks/jdk17/bin/javac

# Set permissions for OpenShift random user
RUN chown -R 1001:0 /opt/jdks /opt/maven \
    && chmod -R g+rw /opt/jdks /opt/maven

# Switch back to non-root user if required by OpenShift
USER 1001

# Verify installations
CMD ["sh", "-c", "java -version && javac -version && mvn -v && mvn-3.8.8 -v"]

# Stage 1: GitHub Runner base
FROM artifactory.voya.net/docker-virtual/openshift/actions/actions-runner:latest

USER root

# 1. Install required tools
RUN microdnf install -y curl tar gzip ca-certificates && microdnf clean all

# 2. Download and install JDK 8 (Temurin)
RUN curl -L -o /tmp/openjdk8.tar.gz https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u412-b08/OpenJDK8U-jdk_x64_linux_hotspot_8u412b08.tar.gz && \
    mkdir -p /usr/lib/jvm/jdk8 && \
    tar -xzf /tmp/openjdk8.tar.gz -C /usr/lib/jvm/jdk8 --strip-components=1 && \
    rm /tmp/openjdk8.tar.gz

# 3. Download and install JDK 11 (Temurin)
RUN curl -L -o /tmp/openjdk11.tar.gz https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.23+9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.23_9.tar.gz && \
    mkdir -p /usr/lib/jvm/jdk11 && \
    tar -xzf /tmp/openjdk11.tar.gz -C /usr/lib/jvm/jdk11 --strip-components=1 && \
    rm /tmp/openjdk11.tar.gz

# 4. Set environment variables
ENV JDK8_HOME=/usr/lib/jvm/jdk8 \
    JDK11_HOME=/usr/lib/jvm/jdk11 \
    JAVA_HOME=/usr/lib/jvm/jdk11 \
    PATH="/usr/lib/jvm/jdk11/bin:${PATH}"

# 5. Configure alternatives
RUN update-alternatives --install "/usr/bin/java" "java" "${JAVA_HOME}/bin/java" 1100 && \
    update-alternatives --install "/usr/bin/javac" "javac" "${JAVA_HOME}/bin/javac" 1100 && \
    update-alternatives --install "/usr/bin/jar" "jar" "${JAVA_HOME}/bin/jar" 1100 && \
    update-alternatives --set java "${JAVA_HOME}/bin/java" && \
    update-alternatives --set javac "${JAVA_HOME}/bin/javac" && \
    update-alternatives --set jar "${JAVA_HOME}/bin/jar"

# 6. Install Maven
RUN mkdir -p /usr/share/maven /usr/share/maven/ref && \
    curl -L -o /tmp/maven.tar.gz https://archive.apache.org/dist/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz && \
    tar -xzf /tmp/maven.tar.gz -C /usr/share/maven --strip-components=1 && \
    rm -f /tmp/maven.tar.gz && \
    ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

# 7. Set Maven environment
ENV MAVEN_HOME=/usr/share/maven \
    MAVEN_CONFIG=/home/runner/.m2 \
    PATH="${MAVEN_HOME}/bin:${PATH}"

# 8. Validate installations
RUN java -version && javac -version && mvn -version

# 9. Setup Maven cache and permissions
RUN mkdir -p /home/runner/.m2 && \
    chown -R 1001:123 /home/runner/.m2 && \
    chmod -R g+rw /home/runner/.m2

# 10. OpenShift permissions
RUN chgrp -R 0 /home/runner /usr/share/maven /usr/lib/jvm && \
    chmod -R g=u /home/runner /usr/share/maven /usr/lib/jvm

# 11. SecureRandom fix (for JVM entropy issues)
RUN if [ -f "${JAVA_HOME}/conf/security/java.security" ]; then \
        sed -i 's|^securerandom.source=.*|securerandom.source=file:/dev/urandom|' "${JAVA_HOME}/conf/security/java.security"; \
    fi

USER 1001

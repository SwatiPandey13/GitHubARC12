# Stage 1: GitHub Runner base
FROM artifactory.voya.net/docker-virtual/openshift/actions/actions-runner:latest

USER root

# 1. Install both JDKs from copied directories
COPY --from=artifactory.voya.net/docker-virtual/rhel8-openjdk8-11-devil:latest \
    /usr/lib/jvm/java-1.8.0-openjdk /usr/lib/jvm/jdk8

COPY --from=artifactory.voya.net/docker-virtual/rhel8-openjdk8-11-devil:latest \
    /usr/lib/jvm/java-11-openjdk /usr/lib/jvm/jdk11

# 2. Set default JDK (JDK 11) and environment variables
ENV JDK8_HOME=/usr/lib/jvm/jdk8 \
    JDK11_HOME=/usr/lib/jvm/jdk11 \
    JAVA_HOME=/usr/lib/jvm/jdk11 \
    PATH="${JAVA_HOME}/bin:${PATH}"

# 3. Configure alternatives system (for compatibility)
RUN update-alternatives --install "/usr/bin/java" "java" "${JAVA_HOME}/bin/java" 1100 \
 && update-alternatives --install "/usr/bin/javac" "javac" "${JAVA_HOME}/bin/javac" 1100 \
 && update-alternatives --install "/usr/bin/jar" "jar" "${JAVA_HOME}/bin/jar" 1100 \
 && update-alternatives --set java "${JAVA_HOME}/bin/java" \
 && update-alternatives --set javac "${JAVA_HOME}/bin/javac" \
 && update-alternatives --set jar "${JAVA_HOME}/bin/jar"

# 4. Install Maven - improved method
RUN mkdir -p /usr/share/maven /usr/share/maven/ref && \
    curl -k -L -o /tmp/maven.tar.gz \
        https://archive.apache.org/dist/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz && \
    tar -xzf /tmp/maven.tar.gz -C /usr/share/maven --strip-components=1 && \
    rm -f /tmp/maven.tar.gz && \
    ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

# 5. Set Maven environment variables
ENV MAVEN_HOME=/usr/share/maven \
    MAVEN_CONFIG=/home/runner/.m2

# 6. Update PATH for all users
ENV PATH="${MAVEN_HOME}/bin:${JAVA_HOME}/bin:${PATH}"

# 7. Verify Java and Maven installations
RUN java -version && \
    javac -version && \
    mvn --version

# 8. Create Maven directory with proper permissions
RUN mkdir -p /home/runner/.m2 && \
    chown -R 1001:123 /home/runner/.m2 && \
    chmod -R g+rw /home/runner/.m2

# 9. OpenShift permissions
RUN chgrp -R 0 /home/runner /usr/share/maven /usr/lib/jvm && \
    chmod -R g=u /home/runner /usr/share/maven /usr/lib/jvm

# 10. Fix potential security issues
RUN if [ -f "${JAVA_HOME}/conf/security/java.security" ]; then \
        sed -i 's|^securerandom.source=.*|securerandom.source=file:/dev/urandom|' "${JAVA_HOME}/conf/security/java.security"; \
    fi

USER 1001
